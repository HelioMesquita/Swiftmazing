//
//  MainModels.swift
//  Swiftmazing
//
//  Created by Hélio Mesquita on 14/12/19.
//  Copyright (c) 2019 Hélio Mesquita. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Visual

enum Main {

    struct Mapper {
        static func repoCellViewModel(repositories: [RepositoryDomain]) -> [FeedCellViewModel] {
            return repositories.compactMap { FeedCellViewModel(repository: $0, cellType: .repositories) }
        }

        static func newsCellViewModel(topRepos: [RepositoryDomain], mostRecent: [RepositoryDomain]) -> [FeedCellViewModel] {
            let topReposImages = topRepos.compactMap { $0.owner.avatar }
            let lastUpdatedImages = mostRecent.compactMap { $0.owner.avatar }
            return [
                FeedCellViewModel(cellType: .news, title: .bestRepositories, name: .renownedRepositories, description: .bestTools, images: topReposImages),
                FeedCellViewModel(cellType: .news, title: .updatedRepositories, name: .latestUpdates, description: .mostUpdatedRepositories, images: lastUpdatedImages)
            ]
        }
    }

    struct ViewModel {
        let news: [FeedCellViewModel]
        let topRepos: [FeedCellViewModel]
        let mostRecent: [FeedCellViewModel]

        init(news: [FeedCellViewModel] = [], topRepos: [FeedCellViewModel] = [], mostRecent: [FeedCellViewModel] = []) {
            self.news = news
            self.topRepos = topRepos
            self.mostRecent = mostRecent
        }
    }

    struct FeedCellViewModel: FeedCollectionViewModelProtocol {
        var cellType: FeedCollectionViewCell
        var title: String?
        var name: String
        var description: String
        var images: [URL]

        init(cellType: FeedCollectionViewCell, title: String?, name: String, description: String, images: [URL]) {
            self.cellType = cellType
            self.title = title
            self.name = name
            self.description = description
            self.images = images
        }

        init(repository: RepositoryDomain, cellType: FeedCollectionViewCell, title: String? = nil) {
            self.cellType = cellType
            self.name = repository.owner.name
            self.description = repository.description ?? ""
            self.images = [repository.owner.avatar]
            self.title = title
        }
    }

}

fileprivate extension String {

    static let bestRepositories = NSLocalizedString("bestRepositories", comment: "")
    static let renownedRepositories = NSLocalizedString("renownedRepositories", comment: "")
    static let bestTools = NSLocalizedString("bestTools", comment: "")
    static let updatedRepositories = NSLocalizedString("updatedRepositories", comment: "")
    static let latestUpdates = NSLocalizedString("latestUpdates", comment: "")
    static let mostUpdatedRepositories = NSLocalizedString("mostUpdatedRepositories", comment: "")

}
