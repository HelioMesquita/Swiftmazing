//
//  MainViewController.swift
//  Swiftmazing
//
//  Created by Hélio Mesquita on 14/12/19.
//  Copyright (c) 2019 Hélio Mesquita. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Visual

protocol MainDisplayLogic: class {
    func show(_ viewModel: Main.ViewModel)
}

class MainViewController: FeedCollectionViewController<Main.FeedCellViewModel> {

    var interactor: MainBusinessLogic?
    var router: (MainRoutingLogic & MainDataPassing)?

    var viewModel: Main.ViewModel = Main.ViewModel() {
        didSet {
            loadTable()
        }
    }

    override func setup() {
        let viewController = self
        let interactor = MainInteractor()
        let presenter = MainPresenter()
        let router = MainRouter()
        viewController.interactor = interactor
        viewController.router = router
        presenter.viewController = viewController
        interactor.presenter = presenter
        router.viewController = viewController
        router.dataStore = interactor
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        interactor?.loadScreen()
    }

    func loadTable() {
        var snapshot = NSDiffableDataSourceSnapshot<FeedSection, Main.FeedCellViewModel>()
        snapshot.appendSections([.news, .topRepos, .lastUpdated])
        snapshot.appendItems(viewModel.news, toSection: .news)
        snapshot.appendItems(viewModel.topRepos, toSection: .topRepos)
        snapshot.appendItems(viewModel.mostRecent, toSection: .lastUpdated)
        dataSource.apply(snapshot, animatingDifferences: false)
    }

}

extension MainViewController: MainDisplayLogic {

    func show(_ viewModel: Main.ViewModel) {
        self.viewModel = viewModel
    }

}
